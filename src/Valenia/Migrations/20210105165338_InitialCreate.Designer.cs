// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Valenia.Infrastructure.Persistence;

namespace Valenia.Migrations
{
    [DbContext(typeof(ValeniaDbContext))]
    [Migration("20210105165338_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Valenia.Domain.Visas.Requirements.Requirement", b =>
                {
                    b.Property<Guid>("RequirementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VisaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RequirementId");

                    b.HasIndex("VisaId");

                    b.ToTable("Requirements");
                });

            modelBuilder.Entity("Valenia.Domain.Visas.Visa", b =>
                {
                    b.Property<Guid>("VisaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("VisaId");

                    b.ToTable("Visas");
                });

            modelBuilder.Entity("Valenia.Domain.Visas.Requirements.Requirement", b =>
                {
                    b.HasOne("Valenia.Domain.Visas.Visa", null)
                        .WithMany("Requirements")
                        .HasForeignKey("VisaId");

                    b.OwnsOne("Valenia.Domain.Visas.Requirements.RequirementDescription", "Description", b1 =>
                        {
                            b1.Property<Guid>("RequirementId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("RequirementId");

                            b1.ToTable("Requirements");

                            b1.WithOwner()
                                .HasForeignKey("RequirementId");
                        });

                    b.OwnsOne("Valenia.Domain.Visas.Requirements.RequirementExample", "Example", b1 =>
                        {
                            b1.Property<Guid>("RequirementId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("RequirementId");

                            b1.ToTable("Requirements");

                            b1.WithOwner()
                                .HasForeignKey("RequirementId");
                        });

                    b.OwnsOne("Valenia.Domain.Visas.Requirements.RequirementId", "Id", b1 =>
                        {
                            b1.Property<Guid>("RequirementId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("RequirementId");

                            b1.ToTable("Requirements");

                            b1.WithOwner()
                                .HasForeignKey("RequirementId");
                        });

                    b.OwnsOne("Valenia.Domain.Visas.Requirements.RequirementName", "Name", b1 =>
                        {
                            b1.Property<Guid>("RequirementId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("RequirementId");

                            b1.ToTable("Requirements");

                            b1.WithOwner()
                                .HasForeignKey("RequirementId");
                        });

                    b.OwnsOne("Valenia.Domain.Visas.VisaId", "ParentId", b1 =>
                        {
                            b1.Property<Guid>("RequirementId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("RequirementId");

                            b1.ToTable("Requirements");

                            b1.WithOwner()
                                .HasForeignKey("RequirementId");
                        });
                });

            modelBuilder.Entity("Valenia.Domain.Visas.Visa", b =>
                {
                    b.OwnsOne("Valenia.Domain.Visas.VisaExpectedProcessingTime", "ExpectedProcessingTime", b1 =>
                        {
                            b1.Property<Guid>("VisaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Days")
                                .HasColumnType("int");

                            b1.HasKey("VisaId");

                            b1.ToTable("Visas");

                            b1.WithOwner()
                                .HasForeignKey("VisaId");
                        });

                    b.OwnsOne("Valenia.Domain.Visas.VisaGoal", "Goal", b1 =>
                        {
                            b1.Property<Guid>("VisaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("VisaId");

                            b1.ToTable("Visas");

                            b1.WithOwner()
                                .HasForeignKey("VisaId");
                        });

                    b.OwnsOne("Valenia.Domain.Visas.VisaId", "Id", b1 =>
                        {
                            b1.Property<Guid>("VisaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("VisaId");

                            b1.ToTable("Visas");

                            b1.WithOwner()
                                .HasForeignKey("VisaId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
